name: CI

on:
  push:

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 1.15.x
    - name: Test
      run: go test ./... -coverprofile cover.out
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3

  stage:
    needs: test
    runs-on: ubuntu-latest
    env:
      REGISTRY_NAME: registry.local
      REGISTRY_PORT: 5000
      KO_DOCKER_REPO: registry.local:5000/service-bindings
      BUNDLE: registry.local:5000/service-bindings/bundle
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: 1.15.x
    - uses: vmware-tanzu/carvel-setup-action@v1
    - run: |
        imgpkg version
        kbld version
        ytt version

    - name: Install ko
      run: |
        cd $(mktemp -d -t ko.XXXX)
        curl -sL https://github.com/google/ko/releases/download/v0.8.1/ko_0.8.1_Linux_x86_64.tar.gz | tar -xz
        sudo mv ./ko /usr/local/bin
        cd -
    - name: Setup local registry
      run: |
        set -o errexit
        set -o nounset
        set -o pipefail

        # Run a registry.
        docker run \
          -d --restart=always -p "127.0.0.1:${REGISTRY_PORT}:5000" --name local-registry \
          registry:2

        # Make the $REGISTRY_NAME -> 127.0.0.1
        echo "127.0.0.1 $REGISTRY_NAME" | sudo tee -a /etc/hosts
    - name: Stage
      run: |
        set -o errexit
        set -o nounset
        set -o pipefail

        readonly version=$(cat VERSION)
        readonly git_sha=$(git rev-parse HEAD)
        readonly git_timestamp=$(TZ=UTC git show --quiet --date='format-local:%Y%m%d%H%M%S' --format="%cd")
        readonly slug=${version}-${git_timestamp}-${git_sha:0:16}

        mkdir -p bundle/.imgpkg
        mkdir -p bundle/config
        mkdir -p bundle/samples

        cp LICENSE "bundle/LICENSE"
        cp NOTICE "bundle/NOTICE"
        cp VERSION "bundle/VERSION"
        cp config/carvel/bundle.yaml "bundle/bundle.yaml"
        cp -r samples "bundle/samples"

        echo "----------------------------ROHIT-----------------------"
        echo $slug
        echo "##[group]Build Service Bindings"
          cp hack/boilerplate/boilerplate.yaml.txt bundle/config/service-bindings.yaml
          ko resolve -t ${slug} -t latest -B -f config \
            | ytt -f - -f config/carvel/release-version.overlay.yaml \
                --data-value version=${slug} \
            >> bundle/config/service-bindings.yaml
          kbld -f bundle/config/service-bindings.yaml --imgpkg-lock-output bundle/.imgpkg/images.yml
        echo "##[endgroup]"

        echo "##[group]Create bundle"
          imgpkg push -f "bundle" -b "${BUNDLE}"
          imgpkg copy -b "${BUNDLE}" --to-tar bundle/service-bindings-bundle.tar
        echo "##[endgroup]"
    - name: Upload Service Bindings build
      uses: actions/upload-artifact@v3
      with:
        name: service-bindings-bundle.tar
        path: bundle/service-bindings-bundle.tar
    - name: Grype scan
      run: |
        echo "##[group]Install grype"
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
        echo "##[endgroup]"
        echo "##[group]Scan source ."
          grype dir:. --exclude ./hack
        echo "##[endgroup]"
        echo "##[group]Scan manager image"
          grype registry:registry.local:5000/service-bindings/manager:latest
        echo "##[endgroup]"
      continue-on-error: true

  
